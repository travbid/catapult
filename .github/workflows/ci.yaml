name: ci
on:
  push:
    branches:
      - master
      - ci
    paths-ignore:
      - '**.md'  # Ignore README changes
  pull_request:
    paths-ignore:
      - '**.md'

permissions:
  contents: read

env:
  RUST_BACKTRACE: '1'  # Make debugging easier if catapult fails at runtime

jobs:
  check-formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: cargo fmt --check --verbose
  test:
    name: Cargo Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: cargo test

  ubuntu-ninja-gcc:
    name: Build and Run (Ubuntu / Ninja / GCC)
    runs-on: ubuntu-latest
    steps:
      - run: >
          sudo apt-get install -y
          llvm
          ninja-build
      - name: Checkout
        uses: actions/checkout@v3
      - run: cargo build
      - run: ./target/debug/catapult -S test_data/test_01 -B build -G Ninja -T test_data/toolchain_gcc.toml
      - run: tree build
      - run: ninja -C build -j1 -v myexe mytest
      - run: tree build
      - run: ./build/test_one/myexe abc def
      - run: ./build/my_depend/mytest

  ubuntu-ninja-clang:
    name: Build and Run (Ubuntu / Ninja / Clang)
    runs-on: ubuntu-latest
    steps:
      - run: >
          sudo apt-get install -y
          llvm
          ninja-build
      - name: Checkout
        uses: actions/checkout@v3
      - run: cargo build
      - run: ./target/debug/catapult -S test_data/test_01 -B build -G Ninja -T test_data/toolchain_clang.toml
      - run: tree build
      - run: ninja -C build -j1 -v myexe mytest
      - run: tree build
      - run: ./build/test_one/myexe abc def
      - run: ./build/my_depend/mytest

  windows-msvc:
    name: Build and Run (Windows / MSVC)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: cargo build
      - run: ./target/debug/catapult -S test_data/test_01 -B build -G MSVC
      - run: tree /f build
      - shell: cmd
        run: >
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          && MSBuild build/test_one.sln
      - run: tree /f build
      - run: ./build/test_one/Debug/myexe.exe abc def
      - run: ./build/my_depend/Debug/mytest.exe

  windows-ninja-clang:
    name: Build and Run (Windows / Ninja / Clang)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: choco install ninja
      - run: cargo build
      - run: ./target/debug/catapult -S test_data/test_01 -B build -G Ninja -T test_data/toolchain_clang.toml
      - run: tree /f build
      - run: ninja -C build -j1 -v myexe mytest
      - run: tree /f build
      - run: ./build/test_one/myexe.exe abc def
      - run: ./build/my_depend/mytest.exe
